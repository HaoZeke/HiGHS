var documenterSearchIndex = {"docs":
[{"location":"cpp/options.html#Runtime-Options","page":"Options","title":"Runtime Options","text":"","category":"section"},{"location":"cpp/options.html","page":"Options","title":"Options","text":"For usage and runtime option information see ","category":"page"},{"location":"cpp/options.html","page":"Options","title":"Options","text":"./bin/highs --help","category":"page"},{"location":"cpp/options.html","page":"Options","title":"Options","text":"The printout is here.","category":"page"},{"location":"cpp/options.html#Library-Options","page":"Options","title":"Library Options","text":"","category":"section"},{"location":"cpp/options.html","page":"Options","title":"Options","text":"The class members for the latest options are defined in file src/lp_data/HighsOptions.h in ","category":"page"},{"location":"cpp/options.html","page":"Options","title":"Options","text":"struct HighsOptionsStruct","category":"page"},{"location":"cpp/get-started.html#Download-source-code","page":"Get Started in C++","title":"Download source code","text":"","category":"section"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"HiGHS can be cloned from the Edinburgh Group in Research and Optimization (ERGO) GitHub repo.","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"git clone https://github.com/ERGO-Code/HiGHS.git","category":"page"},{"location":"cpp/get-started.html#Build-HiGHS-from-source-code","page":"Get Started in C++","title":"Build HiGHS from source code","text":"","category":"section"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"HiGHS uses CMake as a build system. The simplest setup is to create a build folder (within the folder into which HiGHS has been downloaded) and then build HiGHS within it. The name of the build folder is arbitrary but, assuming it is HiGHS/build, the full sequence of commands required is as follows","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"cd HiGHS\nmkdir build\ncd build\ncmake -DFAST_BUILD=ON ..\ncmake --build . ","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"This creates the executable build/bin/highs.","category":"page"},{"location":"cpp/get-started.html#Test-Build","page":"Get Started in C++","title":"Test Build","text":"","category":"section"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"To perform a quick test to see whether the compilation was successful, run ctest from within the build folder.","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"ctest ","category":"page"},{"location":"cpp/get-started.html#Install","page":"Get Started in C++","title":"Install","text":"","category":"section"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"The default installation location may need administrative permissions. To install, after building and testing, run ","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"cmake --install . ","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"To install in a specified installation directory run CMake with the CMAKE_INSTALL_PREFIX flag set: ","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"cmake -DFAST_BUILD=ON -DCMAKE_INSTALL_PREFIX=/path/to/highs_install ..\ncmake --build .\ncmake --install . ","category":"page"},{"location":"cpp/get-started.html#Precompiled-executables","page":"Get Started in C++","title":"Precompiled executables","text":"","category":"section"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"Precompiled executables are available for a variety of platforms at the JuliaBinaryWrappers HiGHS repository.","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"Note that HiGHS is still pre-1.0, so the version numbers in the releases do not match versions of HiGHS in this repository.","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"For Windows users: if in doubt, choose the x86_64-w64-mingw32-cxx11.tar.gz file","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"For Mac users: choose the x86_64-apple-darwin.tar.gz file.","category":"page"},{"location":"cpp/get-started.html#Input-file-formats","page":"Get Started in C++","title":"Input file formats","text":"","category":"section"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"HiGHS can parse .mps and .lp files. Models can also be loaded at runtime from another program using the library interface.","category":"page"},{"location":"cpp/get-started.html#Running-the-executable","page":"Get Started in C++","title":"Running the executable","text":"","category":"section"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"Assuming the executable was created following the build instructions above, and the lp model is specified in model.mps (see more on LP [Input file formats])In the following discussion, the name of the executable file created in build/bin when building HiGHS is assumed to be highs. HiGHS can read plain text MPS files and LP files (but not compressed files), and the following command solves the model in model.mps","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"  /build/bin/highs /path/to/model.mps","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"For usage and runtime option information see ","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"./bin/highs --help","category":"page"},{"location":"cpp/get-started.html#Command-line-options","page":"Get Started in C++","title":"Command line options","text":"","category":"section"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"When HiGHS is run from the command line, some fundamental option values may be specified directly. Many more may be specified via a file. Formally, the usage is","category":"page"},{"location":"cpp/get-started.html","page":"Get Started in C++","title":"Get Started in C++","text":"./build/bin/highs --help\nRunning HiGHS 1.0.0\nCopyright (c) 2021 ERGO-Code under MIT licence terms\n\nHiGHS options\nUsage:\n  ./build/bin/highs [OPTION...] [file]\n\n      --model_file arg    File of model to solve.\n      --presolve arg      Presolve: \"choose\" by default - \"on\"/\"off\" are\n                          alternatives.\n      --solver arg        Solver: \"choose\" by default - \"simplex\"/\"ipm\" are\n                          alternatives.\n      --parallel arg      Parallel solve: \"choose\" by default - \"on\"/\"off\"\n                          are alternatives.\n      --time_limit arg    Run time limit (double).\n      --options_file arg  File containing HiGHS options.\n  -h, --help              Print help.","category":"page"},{"location":"interfaces.html#Language-interfaces","page":"Interfaces","title":"Language interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"There are HiGHS interfaces for C, C#, FORTRAN, Julia and Python in HiGHS/interfaces, with example driver files in HiGHS/examples. ","category":"page"},{"location":"interfaces.html#Julia","page":"Interfaces","title":"Julia","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"A Julia interface is available at HiGHS.jl.","category":"page"},{"location":"interfaces.html#Rust","page":"Interfaces","title":"Rust","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"HiGHS can be used from rust through the highs crate. The rust linear programming modeler good_lp supports HiGHS. ","category":"page"},{"location":"interfaces.html#Javascript","page":"Interfaces","title":"Javascript","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"HiGHS can be used from javascript directly inside a web browser thanks to highs-js. See the demo and the npm package.","category":"page"},{"location":"interfaces.html#GAMS","page":"Interfaces","title":"GAMS","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"A GAMS interface is available at GAMSlinks, including pre-build libraries.","category":"page"},{"location":"interfaces.html#OSI","page":"Interfaces","title":"OSI","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"OSI_ROOT :\npath to COIN-OR/Osi build/install folder (OSI_ROOT/lib/pkg-config/osi.pc should exist)","category":"page"},{"location":"about.html#Specification","page":"About","title":"Specification","text":"","category":"section"},{"location":"about.html","page":"About","title":"About","text":"HiGHS solves large scale sparse linear programming (LP) problems of the form","category":"page"},{"location":"about.html","page":"About","title":"About","text":"textrmmin qquad c^Tx qquad textrmsubject to qquad L = Ax = U qquad l = x = u","category":"page"},{"location":"about.html","page":"About","title":"About","text":"The HiGHS core solver implementes the dual revised simplex method in parallel C++. An interior point solver is available as an optional feature.","category":"page"},{"location":"about.html#OS","page":"About","title":"OS","text":"","category":"section"},{"location":"about.html","page":"About","title":"About","text":"HiGHS can be used on Windows, Linux and MacOS.","category":"page"},{"location":"about.html#Compilers","page":"About","title":"Compilers","text":"","category":"section"},{"location":"about.html","page":"About","title":"About","text":"HiGHS can be used with the following compilers:","category":"page"},{"location":"about.html","page":"About","title":"About","text":"Clang clang\nGNU g++ \nIntel icc","category":"page"},{"location":"about.html#Dependencies","page":"About","title":"Dependencies","text":"","category":"section"},{"location":"about.html","page":"About","title":"About","text":"No third party sortware is required by HiGHS, except for the Threads library.","category":"page"},{"location":"about.html","page":"About","title":"About","text":"In order to build HiGHS from source CMake 3.15 is required. For precompiled executables and libraries please contact us at highsopt@gmail.com.","category":"page"},{"location":"about.html#Reference","page":"About","title":"Reference","text":"","category":"section"},{"location":"about.html","page":"About","title":"About","text":"Parallelizing the dual revised simplex method Q. Huangfu and J. A. J. Hall Mathematical Programming Computation, 10 (1), 119-142, 2018. DOI: 10.1007/s12532-017-0130-5","category":"page"},{"location":"about.html#Performance","page":"About","title":"Performance","text":"","category":"section"},{"location":"about.html","page":"About","title":"About","text":"The performance of HiGHS relative to some commercial and open-source simplex solvers may be assessed via the Mittelmann benchmarks.","category":"page"},{"location":"cpp/examples.html","page":"Examples","title":"Examples","text":"Example programs calling HiGHS from C, C++, C#, Fortran and Python are in HiGHS/examples.","category":"page"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"The HiGHS library is defined in the src/Highs.h header file. It contains the definition of the methods and members of the class. ","category":"page"},{"location":"cpp/library.html#Define-model","page":"The HiGHS Library","title":"Define model","text":"","category":"section"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"Models in HiGHS are defined as an instance of the HighsModel class. This consists of one instance of the HighsLp class, and one instance of the HighsHessian class. Communication of models to and from HiGHS is possible via instances of the HighsLp or HighsModel class. In the C and other interfaces, communication of models is via scalar values and addresses of arrays.","category":"page"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"In C++, the neatest way of passing a model to HiGHS is to create an instance of the HighsModel class, populate its data, and call","category":"page"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"Highs::passModel(const HighsModel& model)","category":"page"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"or create and populate an instance of the HighsLp class, and call","category":"page"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"Highs::passModel(const HighsLp& lp)","category":"page"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"For loading problems from a file, use","category":"page"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"Highs::readModel(const std::string& filename)","category":"page"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"Below is an example of building a HighsModel","category":"page"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"  // Create and populate a HighsModel instance for the LP\n  \n  // Min    f  =  x_0 +  x_1 + 3\n  // s.t.                x_1 <= 7\n  //        5 <=  x_0 + 2x_1 <= 15\n  //        6 <= 3x_0 + 2x_1\n  // 0 <= x_0 <= 4; 1 <= x_1\n  \n  // Although the first constraint could be expressed as an upper\n  // bound on x_1, it serves to illustrate a non-trivial packed\n  // column-wise matrix.\n  \n  HighsModel model;\n  model.lp_.num_col_ = 2;\n  model.lp_.num_row_ = 3;\n  model.lp_.sense_ = ObjSense::kMinimize;\n  model.lp_.offset_ = 3;\n  model.lp_.col_cost_ = {1.0, 1.0};\n  model.lp_.col_lower_ = {0.0, 1.0};\n  model.lp_.col_upper_ = {4.0, 1.0e30};\n  model.lp_.row_lower_ = {-1.0e30, 5.0, 6.0};\n  model.lp_.row_upper_ = {7.0, 15.0, 1.0e30};\n  \n  // Here the orientation of the matrix is column-wise\n  model.lp_.a_matrix_.format_ = MatrixFormat::kColwise;\n  // a_start_ has num_col_1 entries, and the last entry is the number\n  // of nonzeros in A, allowing the number of nonzeros in the last\n  // column to be defined\n  model.lp_.a_matrix_.start_ = {0, 2, 5};\n  model.lp_.a_matrix_.index_ = {1, 2, 0, 1, 2};\n  model.lp_.a_matrix_.value_ = {1.0, 3.0, 1.0, 2.0, 2.0};","category":"page"},{"location":"cpp/library.html#Solve-model","page":"The HiGHS Library","title":"Solve model","text":"","category":"section"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"  // Create a Highs instance\n  Highs highs;\n  HighsStatus return_status;\n  \n  // Pass the model to HiGHS\n  return_status = highs.passModel(model);\n  assert(return_status==HighsStatus::kOk);\n  \n  // Get a const reference to the LP data in HiGHS\n  const HighsLp& lp = highs.getLp();\n  \n  // Solve the model\n  return_status = highs.run();\n  assert(return_status==HighsStatus::kOk);\n  \n  // Get the model status\n  const HighsModelStatus& model_status = highs.getModelStatus();\n  assert(model_status==HighsModelStatus::kOptimal);","category":"page"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"Solution information:","category":"page"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"  const HighsInfo& info = highs.getInfo();\n  cout << \"Simplex iteration count: \" << info.simplex_iteration_count << endl;\n  cout << \"Objective function value: \" << info.objective_function_value << endl;\n  cout << \"Primal  solution status: \" << highs.solutionStatusToString(info.primal_solution_status) << endl;\n  cout << \"Dual    solution status: \" << highs.solutionStatusToString(info.dual_solution_status) << endl;\n  cout << \"Basis: \" << highs.basisValidityToString(info.basis_validity) << endl;","category":"page"},{"location":"cpp/library.html#Integrality-variables","page":"The HiGHS Library","title":"Integrality variables","text":"","category":"section"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"To indicate that variables must take integer values use the HighsLp::integrality vector.","category":"page"},{"location":"cpp/library.html","page":"The HiGHS Library","title":"The HiGHS Library","text":"  model.lp_.integrality_.resize(lp.num_col_);\n  for (int col=0; col < lp.num_col_; col++)\n    model.lp_.integrality_[col] = HighsVarType::kInteger;\n\n  highs.passModel(model);","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"There are several ways the HiGHS library can be used within another C++ project. ","category":"page"},{"location":"cpp/link.html#Use-HiGHS-from-another-CMake-Project","page":"Linking","title":"Use HiGHS from another CMake Project","text":"","category":"section"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"Make sure HiGHS is installed locally with the correct CMake flags:","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"cd HiGHS\nmkdir build\ncd build\ncmake -DFAST_BUILD=ON -DCMAKE_INSTALL_PREFIX=/path_to_highs_install/ ..   \ncmake --build . \ncmake --install .","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"This installs HiGHS in /path_to_highs_install/.","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"Suppose another C++ CMake project has executable code in some file main.cpp, which includes Highs.h. To use the HiGHS library, edit the CMakeLists.txt as follows:","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"project(LOAD_HIGHS LANGUAGES CXX)\n\nset(HIGHS_DIR path_to_highs_install/lib/cmake/highs)\n\nfind_package(HIGHS REQUIRED)\nfind_package(Threads REQUIRED)\n\nadd_executable(main main.cpp)\ntarget_link_libraries(main highs::highs)","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"The line ","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"set(HIGHS_DIR path_to_highs_install/lib/cmake/highs)","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"adds the HiGHS installation path to HIGHS_DIR. This is equivalent to building this project with","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"cmake -DHIGHS_DIR=path_to_highs_install/lib/cmake/highs ..","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"Alternatively, if you wish to include the code of HiGHS within your project, FetchContent is also available as follows: ","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"project(LOAD_HIGHS LANGUAGES CXX)\n\ninclude(FetchContent)\n\nFetchContent_Declare(\n    highs\n    GIT_REPOSITORY \"https://github.com/ERGO-Code/HiGHS.git\"\n    GIT_TAG        \"bazel\"\n)\nset(FAST_BUILD ON CACHE INTERNAL \"Fast Build\")\n\nFetchContent_MakeAvailable(highs)\n\nadd_executable(main call_from_cpp.cc)\ntarget_link_libraries(main highs::highs)","category":"page"},{"location":"cpp/link.html#Compiling-and-linking-without-CMake","page":"Linking","title":"Compiling and linking without CMake","text":"","category":"section"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"An executable defined in the file use_highs.cpp is linked with the HiGHS library as follows. Make sure HiGHS is installed in install_folder following the installation guide. Afterwards, compile and run with","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"g++ -o use_highs use_highs.cpp -I install_folder/include/ -L install_folder/lib/ -lhighs","category":"page"},{"location":"cpp/link.html","page":"Linking","title":"Linking","text":"LD_LIBRARY_PATH=install_folder/lib/ ./use_highs","category":"page"},{"location":"python/example-py.html","page":"Example","title":"Example","text":"If highspy is not already installed, run","category":"page"},{"location":"python/example-py.html","page":"Example","title":"Example","text":"pip install highspy","category":"page"},{"location":"python/example-py.html#Initialize-Highs","page":"Example","title":"Initialize Highs","text":"","category":"section"},{"location":"python/example-py.html","page":"Example","title":"Example","text":"import highspy\nimport numpy as np\n\n# Highs h\nh = highspy.Highs()","category":"page"},{"location":"python/example-py.html#Set-up-problem","page":"Example","title":"Set up problem","text":"","category":"section"},{"location":"python/example-py.html","page":"Example","title":"Example","text":"inf = highspy.kHighsInf\nh.addVars(2, np.array([-inf, -inf]), np.array([inf, inf]))\nh.changeColsCost(2, np.array([0, 1]), np.array([0, 1], dtype=np.double))\nnum_cons = 2\nlower = np.array([2, 0], dtype=np.double)\nupper = np.array([inf, inf], dtype=np.double)\nnum_new_nz = 4\nstarts = np.array([0, 2])\nindices = np.array([0, 1, 0, 1])\nvalues = np.array([-1, 1, 1, 1], dtype=np.double)\nh.addRows(num_cons, lower, upper, num_new_nz, starts, indices, values)\n\n# Access LP \nlp = h.getLp()\nnum_nz = h.getNumNz()\nprint('LP has ', lp.num_col_, ' columns', lp.num_row_, ' rows and ', num_nz, ' nonzeros')\n","category":"page"},{"location":"python/example-py.html#Solve-problem","page":"Example","title":"Solve problem","text":"","category":"section"},{"location":"python/example-py.html","page":"Example","title":"Example","text":"h.run()","category":"page"},{"location":"python/example-py.html#Print-solution-information","page":"Example","title":"Print solution information","text":"","category":"section"},{"location":"python/example-py.html","page":"Example","title":"Example","text":"solution = h.getSolution()\nbasis = h.getBasis()\ninfo = h.getInfo()\nmodel_status = h.getModelStatus()\nprint('Model status = ', h.modelStatusToString(model_status))\nprint()\nprint('Optimal objective = ', info.objective_function_value)\nprint('Iteration count = ', info.simplex_iteration_count)\nprint('Primal solution status = ', h.solutionStatusToString(info.primal_solution_status))\nprint('Dual solution status = ', h.solutionStatusToString(info.dual_solution_status))\nprint('Basis validity = ', h.basisValidityToString(info.basis_validity))","category":"page"},{"location":"python/notebooks.html","page":"Notebooks","title":"Notebooks","text":"As a guide to using the highspy interface there is a collection of Jupyter notebooks available at ...","category":"page"},{"location":"python/pip.html#Install","page":"Get Started in Python","title":"Install","text":"","category":"section"},{"location":"python/pip.html","page":"Get Started in Python","title":"Get Started in Python","text":"HiGHS is available on PyPi at https://pypi.org/project/highspy/.","category":"page"},{"location":"python/pip.html","page":"Get Started in Python","title":"Get Started in Python","text":"If highspy is not already installed, run","category":"page"},{"location":"python/pip.html","page":"Get Started in Python","title":"Get Started in Python","text":"pip install highspy","category":"page"},{"location":"index.html#HiGHS-High-Performance-Optimization-Software","page":"Home","title":"HiGHS - High Performance Optimization Software","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"(Image: Build Status)","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"HiGHS is a high performance serial and parallel solver for large-scale sparse linear programming (LP) and mixed-integer programming (MIP) models developed in C++11, with interfaces to C, C#, FORTRAN, Julia and Python.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"HiGHS is freely available under the MIT licence. ","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"HiGHS can be used as a standalone executable on Windows, Linux and MacOS. There is a C++11 library which can be used within a C++ project or, via one of the interfaces, to a project written in other languages.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Installing HiGHS from source code requires CMake minimum version 3.15, but no other third-party utilities. ","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Your comments or specific questions on HiGHS would be greatly appreciated, so please send an email to  highsopt@gmail.com to get in touch with the team.","category":"page"},{"location":"index.html#LP-and-MIP","page":"Home","title":"LP and MIP","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Linear programming problems (LP) in general bounded form are defined as","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"textrmmin qquad c^Tx qquad textrmsubject to qquad L = Ax = U qquad l = x = u","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"and mixed integer programming (MIP) problems of the same form, for which some of the variables must take integer values. ","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"More on the theory background can be found at www.highs.dev. ","category":"page"}]
}
